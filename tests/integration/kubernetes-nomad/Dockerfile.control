FROM centos:7

# Install dependencies
RUN yum -y update && \
    yum -y install epel-release && \
    yum -y install \
    bind-utils \
    ca-certificates \
    conntrack-tools \
    curl \
    etcd \
    ebtables \
    git \
    gnupg \
    htop \
    iproute \
    iptables \
    jq \
    libselinux-python \
    net-tools \
    nfs-utils \
    openssh-server \
    openssh-clients \
    openssl \
    python-pip \
    python-setuptools \
    socat \
    sudo \
    unzip \
    vim \
    wget \
    xfsprogs && \
    yum clean all

# Install Docker (containerized environment for testing)
RUN curl -fsSL https://get.docker.com/ | sh && \
    systemctl enable docker

# Install containerd
ARG CONTAINERD_VERSION=1.7.0
RUN curl -L https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}-linux-amd64.tar.gz | tar -xz -C /usr/local && \
    mkdir -p /etc/containerd && \
    containerd config default > /etc/containerd/config.toml

# Install CNI plugins
ARG CNI_VERSION=v1.3.0
RUN mkdir -p /opt/cni/bin && \
    curl -L https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-amd64-${CNI_VERSION}.tgz | tar -xz -C /opt/cni/bin

# Install crictl
ARG CRICTL_VERSION=v1.27.0
RUN curl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz | tar -xz -C /usr/local/bin

# Install Kubernetes components
ARG KUBERNETES_VERSION=v1.27.3
RUN curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && \
    curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubelet -o /usr/local/bin/kubelet && \
    curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubeadm -o /usr/local/bin/kubeadm && \
    chmod +x /usr/local/bin/kubectl /usr/local/bin/kubelet /usr/local/bin/kubeadm

# Install Consul
ARG CONSUL_VERSION=1.15.3
RUN curl -L https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip -o consul.zip && \
    unzip consul.zip -d /usr/local/bin && \
    rm consul.zip && \
    chmod +x /usr/local/bin/consul

# Install Vault
ARG VAULT_VERSION=1.14.0
RUN curl -L https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip -o vault.zip && \
    unzip vault.zip -d /usr/local/bin && \
    rm vault.zip && \
    chmod +x /usr/local/bin/vault

# Install Nomad
ARG NOMAD_VERSION=1.6.3
RUN curl -L https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_linux_amd64.zip -o nomad.zip && \
    unzip nomad.zip -d /usr/local/bin && \
    rm nomad.zip && \
    chmod +x /usr/local/bin/nomad

# Install OPA (Open Policy Agent)
ARG OPA_VERSION=v0.58.0
RUN curl -L https://github.com/open-policy-agent/opa/releases/download/${OPA_VERSION}/opa_linux_amd64 -o /usr/local/bin/opa && \
    chmod +x /usr/local/bin/opa

# Directories
RUN mkdir -p /etc/kubernetes/manifests && \
    mkdir -p /etc/kubernetes/pki && \
    mkdir -p /etc/kubernetes/nomad-integration && \
    mkdir -p /var/lib/kubernetes && \
    mkdir -p /var/lib/kubernetes/nomad-integration && \
    mkdir -p /etc/cni/net.d && \
    mkdir -p /var/log/kubernetes && \
    mkdir -p /var/log/nomad && \
    mkdir -p /etc/nomad.d && \
    mkdir -p /etc/nomad.d/server && \
    mkdir -p /etc/nomad.d/client && \
    mkdir -p /etc/vault.d && \
    mkdir -p /etc/consul.d && \
    mkdir -p /var/lib/nomad/snapshots

# Copy entrypoint script
COPY scripts/control-entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Expose ports
EXPOSE 6443 4646 8200 8500 30080 30443

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Default command
CMD ["/bin/bash"]